/**
* Generated by go-doudou v2.0.4.
* Don't edit!
*
* Version No.: v20230115
*/
syntax = "proto3";

package prom;
option go_package = "github.com/wubin1989/promql2influxql/applications/prom/transport/grpc";

import "google/protobuf/any.proto";


message GetLabelLabelNameValuesRpcRequest {
  // Start timestamp. Optional.
// 
  string start = 1 [json_name="start"];
  // End timestamp. Optional.
// 
  string end = 2 [json_name="end"];
  // Repeated series selector argument that selects the series from which to read the label values. Optional.
// 
  repeated string match = 3 [json_name="match"];
  // Label name
// 
// Example: "/label/job/values"
// 
// required
  string labelName = 4 [json_name="labelName"];
}

message GetLabelLabelNameValuesRpcResponse {
  repeated string data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

message GetQueryRangeRpcRequest {
  // Prometheus expression query string.
// 
// Example: "?query=up"
// 
// required
  string query = 1 [json_name="query"];
  // Start timestamp.
// 
// Example: "&start=2015-07-01T20:10:30.781Z"
// 
  string start = 2 [json_name="start"];
  // End timestamp.
// 
// Example: "&end=2015-07-01T20:11:00.781Z"
// 
  string end = 3 [json_name="end"];
  // Query resolution step width in "duration" format or float number of seconds.
// 
// Example: "&step=15s"
// 
  string step = 4 [json_name="step"];
  // Evaluation timeout. Optional.
  string timeout = 5 [json_name="timeout"];
}

message GetQueryRangeRpcResponse {
  QueryData data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

message GetQueryRpcRequest {
  // Prometheus expression query string.
// 
// Example: "?query=up"
// 
// required
  string query = 1 [json_name="query"];
  // Evaluation timestamp. Optional.
// 
// The current server time is used if the "time" parameter is omitted.
// 
// Optional.
  string time = 2 [json_name="time"];
  // Evaluation timeout. Optional.
  string timeout = 3 [json_name="timeout"];
}

message GetQueryRpcResponse {
  QueryData data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

message QueryData {
  google.protobuf.Any result = 1 [json_name="result"];
  string resultType = 2 [json_name="resultType"];
}

message QueryRangeRpcRequest {
  // Prometheus expression query string.
// 
// Example: "?query=up"
// 
// required
  string query = 1 [json_name="query"];
  // Start timestamp.
// 
// Example: "&start=2015-07-01T20:10:30.781Z"
// 
  string start = 2 [json_name="start"];
  // End timestamp.
// 
// Example: "&end=2015-07-01T20:11:00.781Z"
// 
  string end = 3 [json_name="end"];
  // Query resolution step width in "duration" format or float number of seconds.
// 
// Example: "&step=15s"
// 
  string step = 4 [json_name="step"];
  // Evaluation timeout. Optional.
  string timeout = 5 [json_name="timeout"];
}

message QueryRangeRpcResponse {
  QueryData data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

message QueryResponse {
  QueryData data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

message QueryRpcRequest {
  // Prometheus expression query string.
// 
// Example: "?query=up"
// 
// required
  string query = 1 [json_name="query"];
  // Evaluation timestamp. Optional.
// 
// The current server time is used if the "time" parameter is omitted.
// 
// Optional.
  string time = 2 [json_name="time"];
  // Evaluation timeout. Optional.
  string timeout = 3 [json_name="timeout"];
}

message QueryRpcResponse {
  QueryData data = 1 [json_name="data"];
  string status = 2 [json_name="status"];
}

service PromService {
  // Query is compatible to Prometheus POST /api/v1/query
  rpc QueryRpc(QueryRpcRequest) returns (QueryRpcResponse);
  // GetQuery is compatible to Prometheus GET /api/v1/query
  rpc GetQueryRpc(GetQueryRpcRequest) returns (GetQueryRpcResponse);
  // Query_range is compatible to Prometheus POST /api/v1/query_range
  rpc QueryRangeRpc(QueryRangeRpcRequest) returns (QueryRangeRpcResponse);
  // GetQuery_range is compatible to Prometheus GET /api/v1/query_range
  rpc GetQueryRangeRpc(GetQueryRangeRpcRequest) returns (GetQueryRangeRpcResponse);
  // GetLabel_Label_nameValues Returns label values
// The following endpoint returns a list of label values for a provided label name
// 
// The "data" section of the JSON response is a list of string label values.
// 
  rpc GetLabelLabelNameValuesRpc(GetLabelLabelNameValuesRpcRequest) returns (GetLabelLabelNameValuesRpcResponse);
}
