/**
* Generated by go-doudou v2.0.4.
* You can edit it as your need.
 */
package main

import (
	client "github.com/influxdata/influxdb1-client/v2"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
	"github.com/wubin1989/promql2influxql"
	adaptorCfg "github.com/wubin1989/promql2influxql/config"
	service "github.com/wubin1989/promql2influxql/rpc"
	"github.com/wubin1989/promql2influxql/rpc/config"
	"github.com/wubin1989/promql2influxql/rpc/transport/httpsrv"
)

func main() {
	conf := config.LoadFromEnv()

	var (
		err          error
		influxClient client.Client
	)
	influxClient, err = client.NewHTTPClient(client.HTTPConfig{
		Addr:      conf.BizConf.AdaptorInfluxAddr,
		Username:  conf.BizConf.AdaptorInfluxUsername,
		Password:  conf.BizConf.AdaptorInfluxPassword,
		UserAgent: "promql2influxql",
		Timeout:   conf.BizConf.AdaptorInfluxClientTimeout,
	})
	if err != nil {
		panic(err)
	}
	defer influxClient.Close()

	adaptor := promql2influxql.NewInfluxDBAdaptor(adaptorCfg.Config{
		Timeout: conf.BizConf.AdaptorTimeout,
		Verbose: conf.BizConf.AdaptorVerbose,
	}, influxClient)

	svc := service.NewRpc(conf, adaptor)
	handler := httpsrv.NewRpcHandler(svc)
	srv := rest.NewRestServer()
	srv.AddRoute(httpsrv.Routes(handler)...)
	srv.Run()
}
